/* -------------------------------------------------- */
/* HINTS, TIPS, AND TRICKS */
/* -------------------------------------------------- */
/*
- When working from a reference, start by:
	- Identifying the colours.
	- Identifying the fonts/typefaces.
- Write generic styles, then move on to more complex/specific styles.
	- Generic styles include:
		- elements that can be targeted by tag name (eg. 'main')
		- links
		- type elements ('h1', 'p', etc.)
	- Complex/specific styles include:
		- elements that must be targeted by class (eg. '.post')
		- elements that must be targeted using a descendant selector.
- When starting to write responsive styles:
	- Identify the number of layouts.
	- Identify when the layouts change (eg. the 'breakpoints').
	- Test your media queries by making an obvious change to the document, and seeing if it's correctly applied.
- Keep in mind:
	- Preview your CSS in the browser often. Small mistakes can prevent entire stylesheets from being applied.
	- If you're writing a rule that should only be applied when the screen is a certain size, make sure it's inside a media query!
*/

/* -------------------------------------------------- */
/* BOILERPLATE STYLES */
/* -------------------------------------------------- */
*,
*:before,
*:after {
	box-sizing: border-box;
}

html,
body {
	margin: 0;
	padding: 0;
}

.clearfix:after {
	content: '';
	display: table;
	clear: both;
}

/* -------------------------------------------------- */
/* BASE STYLES */
/* -------------------------------------------------- */

body {
	font-family: georgia, 'times new roman', serif;
	line-height: 1.5;
	background-color: #eee;
}

h1, h2, h3, h4, h5, h6 {
	font-family: arial, helvetica, sans-serif;
}

p {
	margin: 1em 0;
}

img {
	max-width: 100%;
}


/* -------------------------------------------------- */
/* HEADER STYLES */
/* -------------------------------------------------- */

.topbar {
	background-color: white;
	overflow: hidden;
}

.brand {
	text-align: center;
	font-size: 1.5em;
}

.brand-main {
	color: darkslateblue;
}

.brand-supporting {
	display: none;
}


/* -------------------------------------------------- */
/* MAIN STYLES */
/* -------------------------------------------------- */


.intro {
	display: none;
}

.post {
	background-color: #fff;
	overflow: hidden;
}

.post div {
	padding: 0 1em;
}

.post h2 a {
	color: darkslateblue;
	font-weight: 700;
	text-decoration: none;
}

.post h3 {
	font-size: 1em;
}

.call-to-action {
	text-align: center;
	padding: 2em 0;
}

.call-to-action button {
	font-size: 1em;
	background-color: darkslateblue;
	color: white;
	border: none;
	text-transform: uppercase;
	width: 300px;
	padding: 1em 0;
}


/* -------------------------------------------------- */
/* FOOTER STYLES */
/* -------------------------------------------------- */

.bottombar {
	background-color: #333;
	color: #ccc;
	padding: 1em;
}



/* -------------------------------------------------- */
/* RESPONSIVE BREAKPOINTS! */
/* -------------------------------------------------- */


@media screen and (min-width: 600px) {

	.brand {
		text-align: left;
		padding: 0 1em;
	}

	.brand-supporting {
		display: inline;
		font-size: 0.75em;
		font-weight: 400;
		color: #999;
	}

	.post-wrapper {
		display: grid;
		grid-template-columns: 1fr 1fr;
		grid-gap: 1em;
		padding: 0 1em;
		margin: 1em 0;
	}

	.post {
		border: 1px solid #ccc;
	}

	.post h2 {
		font-size: 2em;
	}

}



@media screen and (min-width: 960px) {

	.intro {
		display: block;
		padding: 0 1em;
	}

	.intro h2 {
		text-align: center;
		color: darkslateblue;
		font-size: 4em;
		border-bottom: 5px solid darkslateblue;
	}

	.intro h3 {
		font-size: 1.5em;
		font-weight: 400;
		width: 60%;
		text-align: center;
		margin: 1em auto;
	}

	.post-wrapper {
		grid-template-columns: 1fr 1fr 1fr;
		font-family: arial, helvetica, sans-serif;
	}

	.post:nth-child(2) {
		grid-column: 3 / 4;
		grid-row: 1 / 2;
	}

	.post:nth-child(3) {
		grid-column: 2 / 3;
		grid-row: 1 / 2;
	}

	.post:nth-child(4) {
		grid-column: 1 / span 2;
	}

}






/*  */
